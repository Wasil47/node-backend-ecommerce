{"version":3,"sources":["images/testProduct.jpg","components/ProductList/Product/testProduct.jpg","pages/ProductDetail/testProduct.jpg","components/Navbar/Navbar.jsx","services/server.constants.js","services/reusable.functions.js","services/product.service.js","components/AdminPanel/AdminAddProduct/AdminAddProduct.jsx","components/AdminPanel/AdminProducts/AdminProduct/AdminProduct.jsx","components/AdminPanel/AdminProducts/AdminProducts.jsx","pages/Admin/Admin.jsx","components/ProductList/Product/Product.jsx","services/auth.service.js","services/cart.service.js","components/ProductList/ProductList.jsx","pages/Products/Products.jsx","components/ShoppingCart/CartProductList/CartProduct/CartProduct.jsx","components/ShoppingCart/CartProductList/CartProductList.jsx","services/user.service.js","actions/auth.actions.js","actions/actionTypes.js","actions/user.actions.js","components/ShoppingCart/CartAddress/CartAddress.jsx","pages/Cart/Cart.jsx","pages/ProductDetail/ProductDetail.jsx","components/UserLogin/Login/Login.jsx","components/UserLogin/Register/Register.jsx","components/UserPanel/UserOrders/UserOrderDetails/UserOrderDetails.jsx","components/UserPanel/UserPanel.jsx","pages/User/User.jsx","components/App/App.jsx","serviceWorker.js","reducers/auth.reducer.js","reducers/cart.reducer.js","reducers/user.reducer.js","reducers/index.js","index.js"],"names":["module","exports","Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-hidden","style","fontSize","API_URL","handleResponse","response","json","then","data","ok","error","message","statusText","console","log","Error","productService","product","requestOptions","method","body","FormData","fetch","server","catch","products","editedProduct","productId","JSON","stringify","headers","AdminAddProduct","initialnewProduct","productName","productPrice","productStock","productImage","productDesc","initialImage","file","imagePreviewUrl","useState","newProduct","setNewProduct","imagePreview","setImagePreview","handleChange","event","key","target","name","value","onSubmit","preventDefault","htmlFor","onChange","maxLength","rows","reader","FileReader","files","onload","result","readAsDataURL","accept","disabled","src","alt","AdminProduct","props","p","setEditedProduct","editVisible","setEditVisible","testImg","onClick","delete","productsFetch","AdminProducts","setProducts","productDelete","useEffect","map","Admin","color","Product","textDecoration","length","substring","toCart","authHeader","user","parse","localStorage","getItem","token","cartService","orderData","rawData","multiHeader","Headers","append","removeItem","cartProducts","foundProduct","find","index","indexOf","quantity","splice","push","setItem","ProductList","addProductToCart","Products","CartProduct","price","setTotalPrice","newQuantity","setNewQuantity","cartIndex","findIndex","checkQuantityPrice","e","checkPrice","min","max","step","window","location","reload","CartProductList","initialCart","totalPrice","forEach","newPrice","Math","round","setPrice","refresh","userService","login","password","newUser","userData","userId","orders","orderId","orderDetails","authActions","userActions","CartAddress","useSelector","state","userReducer","loggedIn","authReducer","setUserData","dispatch","useDispatch","fetchUserData","auth","customerName","required","customerLastname","customerAddress","defaultChecked","order","orderNumber","Date","now","orderCustomerId","customerId","orderAmount","orderAddress","Cart","showShipping","setShowShipping","fetchCartProducts","ProductDetail","useParams","setProduct","res","err","testImg2","Login","setUser","fail","setFail","Register","initialUser","setNewUser","createNewUser","UserOrderDetails","setOrderDetails","i","detailProductId","detailName","detailPrice","detailQuantity","UserPanel","userOrders","setUserOrders","fetchUserOrders","form","User","loading","logIn","App","paddingTop","exact","path","component","Boolean","hostname","match","initialState","action","cartReducer","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.950c2b77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/testProduct.4560de66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/testProduct.4560de66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/testProduct.4560de66.jpg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\r\n      <NavLink className=\"navbar-brand\" to=\"/home\">\r\n        Ecommerce\r\n      </NavLink>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/home\">\r\n              Products\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/admin\">\r\n              Admin Panel\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/user\">\r\n              {/* {loggedIn ? \"User Panel\" : \"Log In / Sing Up\"} */}\r\n              <i\r\n                className=\"fa fa-user px-2\"\r\n                aria-hidden=\"true\"\r\n                style={{ fontSize: \"1.3rem\" }}\r\n              />\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-item nav-link\" to=\"/cart\">\r\n              <i\r\n                className=\"fa fa-shopping-cart px-2\"\r\n                aria-hidden=\"true\"\r\n                style={{ fontSize: \"1.3rem\" }}\r\n              />\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Navbar;\r\n","export const API_URL = \"https://ecommerce-react-nodejs.herokuapp.com\";\r\n// export const API_URL = \"http://localhost:4000\";\r\n","export const handleResponse = (response) => {\r\n  return response.json().then((data) => {\r\n    if (!response.ok) {\r\n      const error = (data && data.message) || response.statusText;\r\n      console.log(error);\r\n      throw Error(error); // new Error ?\r\n      // return Promise.reject(error);\r\n    }\r\n    return data;\r\n  });\r\n};\r\n","import * as server from \"./server.constants\";\r\nimport { handleResponse } from \"./reusable.functions\";\r\n\r\nconst createNewProduct = (product) => {\r\n  const formData = new FormData(product);\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    body: formData,\r\n  };\r\n  return fetch(`${server.API_URL}/products`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nconst getAllProducts = () => {\r\n  return fetch(`${server.API_URL}/products`)\r\n    .then(handleResponse)\r\n    .then((products) => {\r\n      return products;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nconst getProduct = (productId) => {\r\n  return fetch(`${server.API_URL}/products/${productId}`)\r\n    .then(handleResponse)\r\n    .then((product) => {\r\n      return product;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nconst updateProduct = (editedProduct, productId) => {\r\n  const rawData = JSON.stringify(editedProduct);\r\n  const requestOptions = {\r\n    method: \"PATCH\",\r\n    body: rawData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return fetch(`${server.API_URL}/products/${productId}`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nconst deleteProduct = (productId) => {\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return fetch(`${server.API_URL}/products/${productId}`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nexport const productService = {\r\n  createNewProduct,\r\n  getAllProducts,\r\n  getProduct,\r\n  updateProduct,\r\n  deleteProduct,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./AdminAddProduct.css\";\r\nimport { productService } from \"../../../services/product.service\";\r\n\r\nfunction AdminAddProduct() {\r\n  const initialnewProduct = {\r\n    productName: \"\",\r\n    productPrice: 0,\r\n    productStock: 0,\r\n    productImage: \"\",\r\n    productDesc: \"\",\r\n  };\r\n  const initialImage = {\r\n    file: \"\",\r\n    imagePreviewUrl: \"\",\r\n  };\r\n  const [newProduct, setNewProduct] = useState(initialnewProduct);\r\n  const [imagePreview, setImagePreview] = useState(initialImage);\r\n\r\n  const resetForm = () => {\r\n    setNewProduct(initialnewProduct);\r\n    setImagePreview(initialImage);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const key = event.target.name,\r\n      value = event.target.value;\r\n    setNewProduct({\r\n      ...newProduct,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  // show uploading image\r\n  const handleImageChange = (event) => {\r\n    handleChange(event);\r\n    let reader = new FileReader();\r\n    let file = event.target.files[0];\r\n    reader.onload = () => {\r\n      setImagePreview({\r\n        file: file,\r\n        imagePreviewUrl: reader.result,\r\n      });\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    productService.createNewProduct(event.target).then((data) => {\r\n      if (data && data.message) {\r\n        console.log(data.message);\r\n      }\r\n      resetForm();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Add new product:</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productName\">Name</label>\r\n          <input\r\n            value={newProduct.productName}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"productName\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productPrice\">Price</label>\r\n          <input\r\n            value={newProduct.productPrice}\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            name=\"productPrice\"\r\n            maxLength=\"12\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productStock\">Stock</label>\r\n          <input\r\n            value={newProduct.productStock}\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            name=\"productStock\"\r\n            maxLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productDesc\">Description</label>\r\n          <textarea\r\n            value={newProduct.productDesc}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"productDesc\"\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productImage\">Image</label>\r\n          <input\r\n            value={newProduct.productImage}\r\n            onChange={handleImageChange}\r\n            type=\"file\"\r\n            className=\"form-control-file\"\r\n            name=\"productImage\"\r\n            accept=\"image/*\"\r\n            disabled\r\n            // multiple\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          {imagePreview.imagePreviewUrl ? (\r\n            <img\r\n              className=\"imgPreview\"\r\n              src={imagePreview.imagePreviewUrl}\r\n              alt=\"imgPreview\"\r\n            />\r\n          ) : (\r\n            <div className=\"previewText\">\r\n              Please select an Image for Preview\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button className=\"btn btn-secondary\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminAddProduct;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport testImg from \"../../../../images/testProduct.jpg\";\r\nimport { productService } from \"../../../../services/product.service\";\r\n\r\nimport * as server from \"../../../../services/server.constants\";\r\n\r\nfunction AdminProduct(props) {\r\n  const p = props.product;\r\n  const id = p.productId;\r\n\r\n  const [editedProduct, setEditedProduct] = useState(p);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n\r\n  const onEdit = () => {\r\n    console.log(p.productId);\r\n    setEditVisible(!editVisible);\r\n  };\r\n  const onDelete = () => {\r\n    props.delete(p.productId);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const key = event.target.name,\r\n      value = event.target.value;\r\n    setEditedProduct({\r\n      ...editedProduct,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  // edit product\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    productService.updateProduct(editedProduct, id).then((data) => {\r\n      if (data && data.message) {\r\n        console.log(data.message);\r\n      }\r\n      props.productsFetch();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row align-items-center border-top py-1\">\r\n      <div className=\"col-4 col-lg-2\">\r\n        <Link to={`/product/${p.productId}`}>\r\n          <img\r\n            src={\r\n              p.productImage ? `${server.API_URL}/${p.productImage}` : testImg\r\n            }\r\n            className=\"card-img-top\"\r\n            alt={p.productName}\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"col-4 col-lg-1\">\r\n        <button onClick={onDelete} className=\"btn btn-danger btn-block px-0\">\r\n          Delete\r\n        </button>\r\n      </div>\r\n      <div className=\"col-4 col-lg-1\">\r\n        <button\r\n          onClick={onEdit}\r\n          className=\"btn btn-warning btn-block px-0\"\r\n          data-toggle=\"collapse\"\r\n          data-target={\"#collapse\" + id}\r\n          aria-expanded=\"false\"\r\n          aria-controls={\"collapse\" + id}\r\n        >\r\n          Edit\r\n        </button>\r\n      </div>\r\n      <div className=\"col-12 col-lg-4\">\r\n        <h5>{p.productName}</h5>\r\n      </div>\r\n      <div className=\"col-6 col-lg-2\">\r\n        <p className=\"text-right\">${p.productPrice}</p>\r\n      </div>\r\n      <div className=\"col-6 col-lg-2\">\r\n        <p className=\"text-right\">x {p.productStock} pcs.</p>\r\n      </div>\r\n\r\n      <form\r\n        className=\"col-12 mb-3 collapse\"\r\n        id={\"collapse\" + id}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productName\">Name</label>\r\n          <input\r\n            value={editedProduct.productName}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"productName\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productPrice\">Price</label>\r\n          <input\r\n            value={editedProduct.productPrice}\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            name=\"productPrice\"\r\n            maxLength=\"12\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productStock\">Stock</label>\r\n          <input\r\n            value={editedProduct.productStock}\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            name=\"productStock\"\r\n            maxLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productDesc\">Description</label>\r\n          <textarea\r\n            value={editedProduct.productDesc}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"productDesc\"\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n\r\n        <button className=\"btn btn-secondary pull-right\">Submit changes</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminProduct;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminProduct from \"./AdminProduct/AdminProduct\";\r\nimport { productService } from \"../../../services/product.service\";\r\n\r\nfunction AdminProducts() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const productsFetch = () => {\r\n    productService.getAllProducts().then((data) => {\r\n      setProducts(data);\r\n    });\r\n  };\r\n\r\n  const productDelete = (id) => {\r\n    console.log(id);\r\n    productService.deleteProduct(id).then((response) => {\r\n      if (response && response.message) {\r\n        console.log(response.message);\r\n      }\r\n      productsFetch();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    productsFetch();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container px-0 mt-4\">\r\n      <div className=\"col\">\r\n        <h1>Products:</h1>\r\n      </div>\r\n      {/* Products: */}\r\n      <div className=\"d-flex flex-column\">\r\n        {/* Product: */}\r\n        {products.map((product) => (\r\n          <AdminProduct\r\n            product={product}\r\n            key={product.productId}\r\n            delete={productDelete}\r\n            productsFetch={productsFetch}\r\n          />\r\n        ))}\r\n        {/* Product End */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminProducts;\r\n","import React from \"react\";\r\nimport AdminAddProduct from \"../../components/AdminPanel/AdminAddProduct/AdminAddProduct\";\r\nimport AdminProducts from \"../../components/AdminPanel/AdminProducts/AdminProducts\";\r\n\r\nfunction Admin() {\r\n  return (\r\n    <div className=\"container-xl\">\r\n      <h1>Hello Admin!</h1><h5 style={{color: \"red\"}}>You dont have permission to POST, PUT, PATCH or DELETE. Only GET, sorry!</h5>\r\n      {/* <AdminLogin logIn={logIn} /> */}\r\n      <AdminAddProduct />\r\n      <AdminProducts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import React from \"react\";\r\nimport \"./Product.css\";\r\nimport testImg from \"./testProduct.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as server from \"../../../services/server.constants\";\r\n\r\nfunction Product(props) {\r\n  const p = props.product;\r\n  \r\n  // const onDelete = () => {\r\n  //   props.delete(p.productId);\r\n  // };\r\n\r\n  const addToCart = () => {\r\n    props.toCart(p);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-6 col-lg-4 col-xl-3 mb-4\">\r\n      <div className=\"card h-100 product\">\r\n        <Link to={`/product/${p.productId}`}>\r\n          <img\r\n            src={\r\n              p.productImage ? `${server.API_URL}/${p.productImage}` : testImg\r\n            }\r\n            // src={testImg}\r\n            className=\"card-img-top\"\r\n            alt={p.productName}\r\n          />\r\n        </Link>\r\n        <div className=\"card-body d-flex flex-column\">\r\n          <Link\r\n            to={`/product/${p.productId}`}\r\n            style={{ color: \"#000\", textDecoration: \"none\" }}\r\n          >\r\n            <h5 className=\"card-title\">{p.productName}</h5>\r\n          </Link>\r\n          <p className=\"card-text\">${p.productPrice}</p>\r\n          <p className=\"card-text\">\r\n            <small className=\"text-muted\">\r\n              {p.productDesc.length > 100\r\n                ? p.productDesc.substring(0, 100) + \" ...\"\r\n                : p.productDesc}\r\n            </small>\r\n          </p>\r\n\r\n          <button\r\n            onClick={addToCart}\r\n            className=\"mt-auto btn btn-warning btn-block\"\r\n          >\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","const authHeader = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  if (user && user.token) {\r\n    return { \"x-access-token\": user.token };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default authHeader;\r\n","import * as server from \"./server.constants\";\r\nimport authHeader from \"./auth.service\";\r\nimport { handleResponse } from \"./reusable.functions\";\r\n\r\nconst addProductToCart = (product) => {\r\n  const cartProducts = JSON.parse(localStorage.getItem(\"cartProducts\")) || [];\r\n  // check if product is already in cart\r\n  const foundProduct = cartProducts.find(\r\n    (p) => p.productId === product.productId\r\n  );\r\n  if (foundProduct) {\r\n    // product already in cart, quantity + 1\r\n    const index = cartProducts.indexOf(foundProduct);\r\n    product.quantity = foundProduct.quantity + 1;\r\n    cartProducts.splice(index, 1, product);\r\n  } else {\r\n    // no such product in cart, push to array and creat new cart in localStorage\r\n    product.quantity = 1;\r\n    cartProducts.push(product);\r\n  }\r\n  localStorage.setItem(\"cartProducts\", JSON.stringify(cartProducts));\r\n};\r\n\r\nconst createNewOrder = (orderData) => {\r\n  const rawData = JSON.stringify(orderData);\r\n  // create multi-row headers\r\n  const multiHeader = new Headers(authHeader());\r\n  multiHeader.append(\"Content-Type\", \"application/json\");\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    body: rawData,\r\n    headers: multiHeader,\r\n  };\r\n  return fetch(`${server.API_URL}/orders/create`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((data) => {\r\n      // remove old cart from local storage\r\n      localStorage.removeItem(\"cartProducts\");\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nexport const cartService = {\r\n  createNewOrder,\r\n  addProductToCart,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./ProductList.css\";\r\nimport Product from \"./Product/Product\";\r\n\r\nimport { cartService } from \"../../services/cart.service\";\r\nimport { productService } from \"../../services/product.service\";\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const productsFetch = () => {\r\n    productService.getAllProducts().then((data) => {\r\n      setProducts(data);\r\n    });\r\n  };\r\n\r\n  // const productDelete = (id) => {\r\n  //   console.log(id);\r\n  //   productService.deleteProduct(id).then((data) => {\r\n  //     console.log(data.message);\r\n  //     productsFetch();\r\n  //   });\r\n  // };\r\n\r\n  const addProductToCart = (product) => {\r\n    cartService.addProductToCart(product);\r\n    console.log(\"Add to Cart: \" + product.productName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    productsFetch();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container-xl\">\r\n      <div className=\"col\">\r\n        <h1>Products:</h1>\r\n      </div>\r\n      {/* Products: */}\r\n      <div className=\"row\">\r\n        {/* Product: */}\r\n        {products.map((product) => (\r\n          <Product\r\n            product={product}\r\n            key={product.productId}\r\n            // delete={productDelete}\r\n            toCart={addProductToCart}\r\n          />\r\n        ))}\r\n        {/* Product End */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\nimport ProductList from \"../../components/ProductList/ProductList\";\r\n\r\nfunction Products() {\r\n  return <ProductList />;\r\n}\r\n\r\nexport default Products;\r\n","import React, { useState } from \"react\";\r\nimport \"./CartProduct.css\";\r\nimport testImg from \"../../../../images/testProduct.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as server from \"../../../../services/server.constants\";\r\n\r\nfunction CartProduct(props) {\r\n  const minQuantity = 1,\r\n    maxQuantity = 100;\r\n  const product = props.product;\r\n  const price = product.productPrice * product.quantity;\r\n  const [totalPrice, setTotalPrice] = useState(price);\r\n  const [newQuantity, setNewQuantity] = useState(product.quantity);\r\n  const cartProducts = JSON.parse(localStorage.getItem(\"cartProducts\")) || [];\r\n  const cartIndex = cartProducts.findIndex(\r\n    (p) => p.productId === product.productId\r\n  );\r\n\r\n  const checkQuantityPrice = (e) => {\r\n    setNewQuantity(e.quantity);\r\n    setTotalPrice(e.productPrice * e.quantity);\r\n    props.checkPrice();\r\n  };\r\n\r\n  // todo move this fhunctions to services/cart.service.js\r\n  const incrementQuantity = () => {\r\n    const cartProducts = JSON.parse(localStorage.getItem(\"cartProducts\")) || [];\r\n    if (product.quantity < maxQuantity) {\r\n      product.quantity++;\r\n      cartProducts.splice(cartIndex, 1, product);\r\n      localStorage.setItem(\"cartProducts\", JSON.stringify(cartProducts));\r\n    }\r\n    checkQuantityPrice(product);\r\n  };\r\n  const decrementQuantity = () => {\r\n    const cartProducts = JSON.parse(localStorage.getItem(\"cartProducts\")) || [];\r\n    if (product.quantity >= minQuantity) {\r\n      product.quantity--;\r\n      if (product.quantity <= 0) {\r\n        cartProducts.splice(cartIndex, 1);\r\n        window.location.reload(false);\r\n      } else {\r\n        cartProducts.splice(cartIndex, 1, product);\r\n      }\r\n      localStorage.setItem(\"cartProducts\", JSON.stringify(cartProducts));\r\n    }\r\n    checkQuantityPrice(product);\r\n    if (cartProducts.length === 0) {\r\n      localStorage.removeItem(\"cartProducts\");\r\n    }\r\n  };\r\n  const handleQuantityChange = (event) => {\r\n    const cartProducts = JSON.parse(localStorage.getItem(\"cartProducts\")) || [];\r\n    product.quantity = event.target.value;\r\n    if (product.quantity <= 0) {\r\n      cartProducts.splice(cartIndex, 1);\r\n      window.location.reload(false);\r\n    } else {\r\n      cartProducts.splice(cartIndex, 1, product);\r\n    }\r\n    localStorage.setItem(\"cartProducts\", JSON.stringify(cartProducts));\r\n    checkQuantityPrice(product);\r\n    if (cartProducts.length === 0) {\r\n      localStorage.removeItem(\"cartProducts\");\r\n    }\r\n  };\r\n\r\n  const onDelete = () => {\r\n    const cartProducts = JSON.parse(localStorage.getItem(\"cartProducts\")) || [];\r\n    product.quantity = 0;\r\n    cartProducts.splice(cartIndex, 1);\r\n    window.location.reload(false);\r\n    localStorage.setItem(\"cartProducts\", JSON.stringify(cartProducts));\r\n    checkQuantityPrice(product);\r\n    if (cartProducts.length === 0) {\r\n      localStorage.removeItem(\"cartProducts\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md\">\r\n          <Link to={`/products/${product.productId}`}>\r\n            <img\r\n              className=\"cartImg\"\r\n              src={\r\n                product.productImage\r\n                  ? `${server.API_URL}/${product.productImage}`\r\n                  : testImg\r\n              }\r\n              //  src={testImg}\r\n              alt=\"testImg\"\r\n            />\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md\">\r\n          <Link\r\n            to={`/products/${product.productId}`}\r\n            style={{ color: \"#000\", textDecoration: \"none\" }}\r\n          >\r\n            <h5>{product.productName}</h5>\r\n          </Link>\r\n          <p>\r\n            {product.productDesc.length > 100\r\n              ? product.productDesc.substring(0, 100) + \" ...\"\r\n              : product.productDesc}\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md row align-items-center px-0 m-0\">\r\n          <div className=\"col-4\">\r\n            <div className=\"quantity \">\r\n              <input\r\n                onClick={incrementQuantity}\r\n                type=\"button\"\r\n                value=\"+\"\r\n                className=\"countBtn\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                min={minQuantity}\r\n                max={maxQuantity}\r\n                step=\"1\"\r\n                className=\"countItem text-right\"\r\n                value={newQuantity}\r\n                onChange={handleQuantityChange}\r\n              />\r\n              <input\r\n                onClick={decrementQuantity}\r\n                type=\"button\"\r\n                value=\"-\"\r\n                className=\"countBtn\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <h6 className=\"my-0\">x $ {product.productPrice}</h6>\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <button onClick={onDelete} className=\"btn btn-outline-danger\">\r\n              <i className=\"fa fa-trash\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartProduct;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CartProduct from \"./CartProduct/CartProduct\";\r\n\r\nfunction CartProductList(props) {\r\n  const initialCart = JSON.parse(localStorage.getItem(\"cartProducts\")) || [];\r\n  const [cartProducts, setCartProducts] = useState(initialCart);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  const checkPrice = () => {\r\n    const cartProducts = JSON.parse(localStorage.getItem(\"cartProducts\")) || [];\r\n    let price = 0;\r\n    cartProducts.forEach((p) => {\r\n      return (price = price + p.quantity * p.productPrice);\r\n    });\r\n    const newPrice = Math.round(price * 100) / 100;\r\n    setTotalPrice(newPrice);\r\n    props.setPrice(newPrice);\r\n    props.refresh();\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkPrice();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header bg-secondary text-white\">\r\n        <h5 className=\"mr-auto\">Shopping Cart</h5>\r\n      </div>\r\n      {cartProducts.map((product, index) => (\r\n        <CartProduct product={product} key={index} checkPrice={checkPrice} />\r\n      ))}\r\n      <div className=\"card-footer\">\r\n        <h5 className=\"pull-right\">\r\n          <span className=\"text-muted\">Price: </span>${totalPrice}\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartProductList;\r\n","import * as server from \"./server.constants\";\r\nimport authHeader from \"./auth.service\";\r\nimport { handleResponse } from \"./reusable.functions\";\r\n\r\nconst login = (login, password) => {\r\n  const rawData = JSON.stringify({ login, password });\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    body: rawData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return fetch(`${server.API_URL}/user/login`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      // store jwt (login, token) in local storage\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      return user;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nconst logout = () => {\r\n  // remove user token from local storage to log out\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst register = (newUser) => {\r\n  const rawData = JSON.stringify(newUser);\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    body: rawData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return fetch(`${server.API_URL}/user/register`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nconst getUserData = () => {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(),\r\n  };\r\n\r\n  return fetch(`${server.API_URL}/user/authorized`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((userData) => {\r\n      return userData[0];\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nconst updateUserData = (user) => {\r\n  const rawData = JSON.stringify(user);\r\n  const multiHeader = new Headers(authHeader());\r\n  multiHeader.append(\"Content-Type\", \"application/json\");\r\n\r\n  const requestOptions = {\r\n    method: \"PATCH\",\r\n    body: rawData,\r\n    headers: multiHeader,\r\n  };\r\n  return fetch(`${server.API_URL}/user/authorized`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nconst getUserOrders = (userId) => {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(),\r\n  };\r\n\r\n  return fetch(`${server.API_URL}/orders/${userId}`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((orders) => {\r\n      return orders;\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"frontend error\", error);\r\n    });\r\n};\r\n\r\nconst getOrderDetails = (orderId) => {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(),\r\n  };\r\n  return fetch(`${server.API_URL}/orders/details/${orderId}`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((orderDetails) => {\r\n      return orderDetails;\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n\r\nconst auth = () => {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(),\r\n  };\r\n  return fetch(`${server.API_URL}/user/auth`, requestOptions)\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    })\r\n    .catch((error) => console.log(\"frontend error\", error));\r\n};\r\n// WHICH BETTER?:\r\n// const auth = async () => {\r\n//   const requestOptions = {\r\n//     method: \"GET\",\r\n//     headers: authHeader(),\r\n//   };\r\n//   try {\r\n//     const response = await fetch(`${server.API_URL}/user/auth`, requestOptions);\r\n//     if (response.ok) {\r\n//       return true;\r\n//     }\r\n//     else {\r\n//       return false;\r\n//     }\r\n//   }\r\n//   catch (error) {\r\n//     return console.log(\"frontend error\", error);\r\n//   }\r\n// };\r\n\r\nexport const userService = {\r\n  login,\r\n  logout,\r\n  register,\r\n  getUserData,\r\n  getUserOrders,\r\n  getOrderDetails,\r\n  updateUserData,\r\n  auth,\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (user) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    user: user,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: actionTypes.LOGOUT,\r\n  };\r\n};\r\n\r\nexport const authActions = {\r\n  authStart,\r\n  authSuccess,\r\n  authFail,\r\n  logout,\r\n};\r\n","export const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\n\r\nexport const AUTH_CHECK = \"AUTH_CHECK\";\r\n\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\r\n\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const GET_USER_DATA_SUCCESS = \"GET_USER_DATA_SUCCESS\";\r\nexport const GET_USER_DATA_FAIL = \"GET_USER_DATA_FAIL\";\r\nexport const GET_USER_ORDERS_SUCCESS = \"GET_USER_ORDERS_SUCCESS\";\r\nexport const GET_USER_ORDER_DETAILS_SUCCESS = \"GET_USER_ORDER_DETAILS_SUCCESS\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const getUserDataSuccess = (userData) => {\r\n  return {\r\n    type: actionTypes.GET_USER_DATA_SUCCESS,\r\n    userData: userData,\r\n  };\r\n};\r\n\r\nexport const getUserDataFail = () => {\r\n  return {\r\n    type: actionTypes.GET_USER_DATA_FAIL,\r\n  };\r\n};\r\n\r\nexport const userActions = {\r\n  getUserDataSuccess,\r\n  getUserDataFail,\r\n};\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { cartService } from \"../../../services/cart.service\";\r\nimport { userService } from \"../../../services/user.service\";\r\nimport { authActions, userActions } from \"../../../actions\";\r\n\r\nfunction CartAddress(props) {\r\n  const user = useSelector((state) => state.userReducer);\r\n  const loggedIn = useSelector((state) => state.authReducer.loggedIn);\r\n  const [userData, setUserData] = useState(user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // check token is valid and user is login\r\n  const auth = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user && user.token) {\r\n      userService.auth().then((data) => {\r\n        if (!data) {\r\n          dispatch(authActions.authFail(data.message));\r\n          dispatch(userActions.getUserDataFail());\r\n          console.log(\"authorized:\", data);\r\n          userService.logout();\r\n        }\r\n        if (data) {\r\n          dispatch(authActions.authSuccess());\r\n          console.log(\"authorized:\", data);\r\n          fetchUserData();\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(authActions.authFail(\"No Token!\"));\r\n    }\r\n  };\r\n\r\n  const fetchUserData = () => {\r\n    userService.getUserData().then(\r\n      (data) => {\r\n        if (data) {\r\n          dispatch(userActions.getUserDataSuccess(data));\r\n          setUserData(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        dispatch(authActions.authFail(error));\r\n        dispatch(userActions.getUserDataFail());\r\n      }\r\n    );\r\n  };\r\n\r\n  const createNewOrder = () => {\r\n    const products = props.products; // array of products\r\n    const numberDate = Math.round(Date.now() / 1000);\r\n    const order = {\r\n      orderNumber: numberDate,\r\n      orderCustomerId: userData.customerId,\r\n      orderAmount: props.totalPrice,\r\n      orderAddress: userData.customerAddress,\r\n    };\r\n    const orderData = {\r\n      order: order,\r\n      products: products,\r\n    };\r\n\r\n    cartService.createNewOrder(orderData).then((data) => {\r\n      if (data && data.message) {\r\n        console.log(data.message);\r\n      }\r\n      window.location.reload(false);\r\n    });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const key = event.target.name,\r\n      value = event.target.value;\r\n    setUserData({\r\n      ...userData,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth();\r\n    // fetchUserData();\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"card\">\r\n        <div className=\"card-header bg-secondary text-white\">\r\n          <h5 className=\"mr-auto\">Shipping Address</h5>\r\n        </div>\r\n        <div className=\"card-body row\">\r\n          <form className=\"col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"customerName\">Name:</label>\r\n              <input\r\n                value={userData.customerName}\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"customerName\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"customerLastname\">Lastname:</label>\r\n              <input\r\n                value={userData.customerLastname}\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"customerLastname\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"customerAddress\">Address:</label>\r\n              <textarea\r\n                value={userData.customerAddress}\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"customerAddress\"\r\n                rows=\"4\"\r\n                required\r\n              />\r\n            </div>\r\n          </form>\r\n          <div className=\"col-md-6 d-flex flex-column\">\r\n            <ul className=\"list-group\">\r\n              {props.products.map((p) => {\r\n                return (\r\n                  <li\r\n                    key={p.productId}\r\n                    className=\"list-group-item d-flex justify-content-between align-items-center py-1\"\r\n                  >\r\n                    {p.productName.length > 14\r\n                      ? p.productName.substring(0, 12) + \" ...\"\r\n                      : p.productName}\r\n                    <span className=\"badge badge-primary badge-pill\">\r\n                      {p.quantity}\r\n                    </span>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            <fieldset className=\"form-group mt-4\">\r\n              <div className=\"row\">\r\n                <legend className=\"col-form-label col-6\">\r\n                  Shipping method:\r\n                </legend>\r\n                <div className=\"col-6\">\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"orderShipping\"\r\n                      value=\"20\"\r\n                      defaultChecked\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"exampleRadios1\"\r\n                    >\r\n                      DHL - $0\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"orderShipping\"\r\n                      value=\"10\"\r\n                      disabled\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"exampleRadios1\"\r\n                    >\r\n                      DPD - $0\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <h5 className=\"pull-right\">\r\n            <span className=\"text-muted\">Total price: </span>${props.totalPrice}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"my-3 ml-auto d-flex flex-row\">\r\n        {props.products.length === 0 && (\r\n          <Link\r\n            to={`/products`}\r\n            style={{ color: \"#f75050\", textDecoration: \"none\" }}\r\n            className=\"form-text text-danger mx-2\"\r\n          >\r\n            <small className=\"align-middle\">Add product to Cart</small>\r\n          </Link>\r\n        )}\r\n        {!loggedIn && (\r\n          <Link\r\n            to={`/user/`}\r\n            style={{ color: \"#f75050\", textDecoration: \"none\" }}\r\n            className=\"form-text text-danger mx-2\"\r\n          >\r\n            <small className=\"align-middle\">Login to continue</small>\r\n          </Link>\r\n        )}\r\n\r\n        <button\r\n          onClick={createNewOrder}\r\n          className=\"btn btn-success\"\r\n          disabled={!loggedIn || props.products.length === 0}\r\n        >\r\n          Finalize Order\r\n        </button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default CartAddress;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Cart.css\";\r\nimport CartProductList from \"../../components/ShoppingCart/CartProductList/CartProductList\";\r\nimport CartAddress from \"../../components/ShoppingCart/CartAddress/CartAddress\";\r\n\r\nfunction Cart() {\r\n  const [showShipping, setShowShipping] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  const fetchCartProducts = () => {\r\n    const cartProducts = JSON.parse(localStorage.getItem(\"cartProducts\")) || [];\r\n    setProducts(cartProducts);\r\n  };\r\n  const showAddress = () => {\r\n    setShowShipping(!showShipping);\r\n    fetchCartProducts();\r\n  };\r\n  const setPrice = (price) => {\r\n    setTotalPrice(price);\r\n  };\r\n  useEffect(() => {\r\n    fetchCartProducts();\r\n  }, []);\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <CartProductList setPrice={setPrice} refresh={fetchCartProducts} />\r\n      <button onClick={showAddress} className=\"btn btn-info my-3 ml-auto\">\r\n        {/* {showShipping ? \"Refresh\" : \"Shipping Methods\"} */}\r\n        Shipping Methods\r\n      </button>\r\n      <h5 style={{color: \"red\"}}>You dont have permission to POST, PUT, PATCH or DELETE. Only GET, sorry!</h5>\r\n      {showShipping && (\r\n        <CartAddress products={products} totalPrice={totalPrice} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport testImg from \"../../images/testProduct.jpg\";\r\nimport testImg2 from \"./testProduct.jpg\";\r\nimport { cartService } from \"../../services/cart.service\";\r\n\r\nimport * as server from \"../../services/server.constants\";\r\n\r\nfunction ProductDetail() {\r\n  const { id } = useParams();\r\n  const [product, setProduct] = useState({\r\n    productName: \"\",\r\n    productPrice: \"\",\r\n    productStock: \"\",\r\n    productImage: \"\",\r\n    productDesc: \"\",\r\n  });\r\n\r\n  const productFetch = () => {\r\n    fetch(`${server.API_URL}/products/` + id)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setProduct(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"product not found, \", err);\r\n        setProduct({\r\n          productName: \"Product not found\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const addToCart = () => {\r\n    cartService.addProductToCart(product);\r\n    console.log(\"Add to Cart: \" + product.productName);\r\n  };\r\n  useEffect(() => {\r\n    productFetch();\r\n  }, []);\r\n  return (\r\n    <div className=\"row border rounded\">\r\n      <div className=\"col-md-5\">\r\n        <img\r\n          src={\r\n            product.productImage\r\n              ? `${server.API_URL}/${product.productImage}`\r\n              : testImg || testImg2\r\n          }\r\n          // src={testImg}\r\n          className=\"card-img-top\"\r\n          alt={product.productName}\r\n        />\r\n      </div>\r\n      <aside className=\"col-md-7 d-flex flex-column p-3\">\r\n        <h3>{product.productName}</h3>\r\n        <h4 className=\"text-info\">$ {product.productPrice}</h4>\r\n        <p className=\"text-muted\">stock: {product.productStock}</p>\r\n        <dl className=\"mt-1\">\r\n          <dt>Description:</dt>\r\n          <dd>{product.productDesc}</dd>\r\n        </dl>\r\n        <button\r\n          onClick={addToCart}\r\n          className=\"mt-auto btn btn-warning font-weight-bold\"\r\n        >\r\n          <i\r\n            className=\"fa fa-shopping-cart px-3\"\r\n            aria-hidden=\"true\"\r\n            style={{ fontSize: \"1.3rem\" }}\r\n          />\r\n          ADD TO CART\r\n        </button>\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authActions } from \"../../../actions\";\r\nimport { userService } from \"../../../services/user.service\";\r\n\r\nfunction Login() {\r\n  const initialUser = {\r\n    login: \"test\",\r\n    password: \"test\",\r\n  };\r\n  const [user, setUser] = useState(initialUser);\r\n  const [fail, setFail] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    const key = event.target.name,\r\n      value = event.target.value;\r\n    setUser({\r\n      ...user,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const login = () => {\r\n    userService.login(user.login, user.password).then(\r\n      (data) => {\r\n        if (data) {\r\n          setFail(false);\r\n          dispatch(authActions.authSuccess(data));\r\n        } else {\r\n          setFail(true);\r\n        }\r\n      },\r\n      (error) => {\r\n        dispatch(authActions.authFail(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    login();\r\n    // window.location.reload(false);\r\n  };\r\n  return (\r\n    <div className=\"col-md-6 my-2\">\r\n      <h3 className=\"text-secondary\">Login</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"login\">Login</label>\r\n          <input\r\n            value={user.login}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"login\"\r\n            className={\"form-control\" + (!user.login ? \" is-invalid\" : \"\")}\r\n            required\r\n          />\r\n          <small className=\"form-text text-muted\">login: test</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            value={user.password}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className={\"form-control\" + (!user.password ? \" is-invalid\" : \"\")}\r\n            required\r\n          />\r\n          <small className=\"form-text text-muted\">password: test</small>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Login\r\n        </button>\r\n        {fail && (\r\n          <small className=\"form-text text-danger\">\r\n            Wrong login or password.\r\n          </small>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { userService } from \"../../../services/user.service\";\r\n\r\nfunction Register() {\r\n  const initialUser = {\r\n    login: \"\",\r\n    password: \"\",\r\n    customerName: \"\",\r\n    customerLastname: \"\",\r\n    customerAddress: \"\",\r\n  };\r\n  const [newUser, setNewUser] = useState(initialUser);\r\n  const handleChange = (event) => {\r\n    const key = event.target.name,\r\n      value = event.target.value;\r\n    setNewUser({\r\n      ...newUser,\r\n      [key]: value,\r\n    });\r\n  };\r\n  const resetForm = () => {\r\n    setNewUser(initialUser);\r\n  };\r\n  const createNewUser = () => {\r\n    userService.register(newUser).then(\r\n      (data) => {\r\n        if (data && data.message) {\r\n          console.log(data.message);\r\n          resetForm();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    createNewUser();\r\n  };\r\n  return (\r\n    <div className=\"col-md-6 my-2\">\r\n      <h3 className=\"text-secondary\">Register</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"login\">Login</label>\r\n          <input\r\n            value={newUser.login}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"login\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            value={newUser.password}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"customerName\">First Name</label>\r\n          <input\r\n            value={newUser.customerName}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"customerName\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"customerLastname\">Last Name</label>\r\n          <input\r\n            value={newUser.customerLastname}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"customerLastname\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"customerAddress\">Address:</label>\r\n          <textarea\r\n            value={newUser.customerAddress}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"customerAddress\"\r\n            rows=\"2\"\r\n          />\r\n          <small className=\"form-text text-muted\">\r\n            Shipping address - You can set it any time.\r\n          </small>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Register\r\n        </button>\r\n      </form>\r\n      <h5 style={{color: \"red\"}}>You dont have permission to POST, PUT, PATCH or DELETE. Only GET, sorry!</h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userService } from \"../../../../services/user.service\";\r\n\r\nfunction UserOrderDetails(props) {\r\n  const order = props.order;\r\n  const id = order.orderId;\r\n  const [orderDetails, setOrderDetails] = useState([]);\r\n\r\n  const fetchOrderDetails = () => {\r\n    userService.getOrderDetails(id).then((data) => {\r\n      if (data) {\r\n        setOrderDetails(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrderDetails();\r\n  }, []);\r\n  return (\r\n    <div className=\"row align-items-center py-3 border-bottom\">\r\n      <div className=\"col-6 col-lg-2 font-weight-bold\">{order.orderNumber}</div>\r\n      <div className=\"col-12 col-lg-5\">{order.orderAddress}</div>\r\n      <div className=\"col-6 col-lg-2 font-weight-bold\">\r\n        $ {order.orderAmount}\r\n      </div>\r\n\r\n      <div className=\"col-8 col-lg-2 my-1\">\r\n        <button\r\n          className=\"btn btn-warning btn-block px-0\"\r\n          data-toggle=\"collapse\"\r\n          data-target={\"#collapse\" + id}\r\n          aria-expanded=\"false\"\r\n          aria-controls={\"collapse\" + id}\r\n        >\r\n          Show details\r\n        </button>\r\n      </div>\r\n      <div className=\"col-4 col-lg-1 my-1\">\r\n        <button className=\"btn btn-danger btn-block px-0\" disabled>\r\n          Delete\r\n        </button>\r\n      </div>\r\n      <div className=\"col-12 collapse my-1 px-0\" id={\"collapse\" + id}>\r\n        <div className=\"row align-items-center mb-1\">\r\n          <div className=\"col-0 col-lg-1 text-right\"></div>\r\n          <div className=\"col-12 col-lg-7 text-center\">\r\n            <small>Product Name</small>\r\n          </div>\r\n          <div className=\"col-6 col-lg-2 text-right\">\r\n            <small>Product Price</small>\r\n          </div>\r\n          <div className=\"col-6 col-lg-2\">\r\n            <small>Quantity</small>\r\n          </div>\r\n        </div>\r\n        {orderDetails.map((product, i) => {\r\n          i++;\r\n          return (\r\n            <div className=\"row align-items-center my-1\" key={i + \"product\"}>\r\n              <div className=\"col-2 col-lg-1 text-right\">{i}.</div>\r\n\r\n              <div className=\"col-10 col-lg-7 text-primary\">\r\n                <Link to={`/products/${product.detailProductId}`}>\r\n                  {product.detailName}\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"col-6 col-lg-2 text-right\">\r\n                $ {product.detailPrice}\r\n              </div>\r\n              <div className=\"col-6 col-lg-2\">\r\n                x {product.detailQuantity} pcs.\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserOrderDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport OrderDetails from \"./UserOrders/UserOrderDetails/UserOrderDetails\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userService } from \"../../services/user.service\";\r\nimport { authActions, userActions } from \"../../actions\";\r\n\r\n// todo move users orders to UserOrders component\r\n// todo move user data to UserData component\r\n\r\nfunction UserPanel(props) {\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [user, setUser] = useState(userData);\r\n  const [userOrders, setUserOrders] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchUserData = () => {\r\n    userService.getUserData().then(\r\n      (data) => {\r\n        if (data) {\r\n          dispatch(userActions.getUserDataSuccess(data));\r\n          setUser(data);\r\n          fetchUserOrders(data.customerId);\r\n        }\r\n      },\r\n      (error) => {\r\n        dispatch(authActions.authFail(error));\r\n        dispatch(userActions.getUserDataFail());\r\n      }\r\n    );\r\n  };\r\n\r\n  const fetchUserOrders = (userId) => {\r\n    // userData.customerId\r\n    userService.getUserOrders(userId).then((data) => {\r\n      if (data) {\r\n        setUserOrders(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateUserData = () => {\r\n    userService.updateUserData(user).then(\r\n      (data) => {\r\n        if (data && data.message) {\r\n          console.log(data.message);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        dispatch(authActions.authFail(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const key = event.target.name,\r\n      value = event.target.value;\r\n    setUser({\r\n      ...user,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    updateUserData();\r\n  };\r\n\r\n  const logout = () => {\r\n    userService.logout();\r\n    // localStorage.removeItem(\"user\");\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col my-2\">\r\n      <h3 className=\"text-secondary\">User panel:</h3>\r\n\r\n      {/* USER DATA */}\r\n      <div className=\"card\">\r\n        <div className=\"card-header bg-secondary text-white\">\r\n          <h5 className=\"mr-auto\">User details:</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={handleSubmit} className=\"row\" id=\"update-user-form\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"customerName\">Name:</label>\r\n                <input\r\n                  value={user.customerName}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"customerName\"\r\n                  // disabled\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"customerLastname\">Lastname:</label>\r\n                <input\r\n                  value={user.customerLastname}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"customerLastname\"\r\n                  // disabled\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"customerAddress\">Address:</label>\r\n                <textarea\r\n                  value={user.customerAddress}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"customerAddress\"\r\n                  rows=\"4\"\r\n                  // disabled\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"login\">Login</label>\r\n                <input\r\n                  value={user.login}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  name=\"login\"\r\n                  className=\"form-control\"\r\n                  disabled\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  value={user.password}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"form-control\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <button\r\n            type=\"submit\"\r\n            form=\"update-user-form\"\r\n            className=\"btn btn-danger pull-right\"\r\n          >\r\n            Change data\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ORDERS */}\r\n      <div className=\"card mt-2\">\r\n        <div className=\"card-header bg-secondary text-white\">\r\n          <h5 className=\"mr-auto\">User orders:</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"d-flex flex-column\">\r\n            {/* Order: */}\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-4 col-lg-2\">\r\n                <small>Number</small>\r\n              </div>\r\n              <div className=\"col-4 col-lg-5\">\r\n                <small>Address</small>\r\n              </div>\r\n              <div className=\"col-4 col-lg-2\">\r\n                <small>Total Price</small>\r\n              </div>\r\n            </div>\r\n            {/* {props.userOrders.map((order) => ( */}\r\n            {userOrders.map((order) => (\r\n              <OrderDetails\r\n                order={order}\r\n                key={order.orderId}\r\n                // delete={orderDelete}\r\n              />\r\n            ))}\r\n            {/* Order End */}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <button\r\n            onClick={props.fetchUserOrders}\r\n            className=\"btn btn-primary pull-right\"\r\n          >\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <button onClick={logout} className=\"btn btn-danger mt-2\">\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPanel;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport Login from \"../../components/UserLogin/Login/Login\";\r\nimport Register from \"../../components/UserLogin/Register/Register\";\r\nimport UserPanel from \"../../components/UserPanel/UserPanel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { userActions, authActions } from \"../../actions\";\r\nimport { userService } from \"../../services/user.service\";\r\n\r\nfunction User() {\r\n  const [loading, setLoading] = useState(false);\r\n  const user = useSelector((state) => state.userReducer);\r\n  const loggedIn = useSelector((state) => state.authReducer.loggedIn);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // check token is valid and user is login\r\n  const auth = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user && user.token) {\r\n      userService.auth().then((data) => {\r\n        if (!data) {\r\n          dispatch(authActions.authFail(data));\r\n          dispatch(userActions.getUserDataFail());\r\n          console.log(\"authorized:\", data);\r\n          userService.logout();\r\n        }\r\n        if (data) {\r\n          dispatch(authActions.authSuccess());\r\n          console.log(\"authorized:\", data);\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(authActions.authFail(\"No Token!\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!loading && (\r\n        <div className=\"container-xl\">\r\n          <h1>Hello {user.customerName ? user.customerName : \"User\"}!</h1>\r\n          <div className=\"row\">\r\n            {loggedIn ? (\r\n              <UserPanel logIn={loggedIn} />\r\n            ) : (\r\n              <Fragment>\r\n                <Login />\r\n                <Register />\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\n// import Home from \"../pages/Home/Home\";\r\nimport Admin from \"../../pages/Admin/Admin\";\r\nimport Products from \"../../pages/Products/Products\";\r\nimport Cart from \"../../pages/Cart/Cart\";\r\nimport ProductDetail from \"../../pages/ProductDetail/ProductDetail\";\r\nimport User from \"../../pages/User/User\";\r\n\r\nfunction App() {\r\n  return (\r\n    <main className=\"container-xl\" style={{ paddingTop: \"5rem\" }}>\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        {/* <Route exact path=\"/\" component={Home} /> */}\r\n        <Route exact path=\"/home\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n        <Route exact path=\"/\" component={Products} />\r\n        <Route exact path=\"/product/:id\" component={ProductDetail} />\r\n        <Route exact path=\"/admin\" component={Admin} />\r\n        <Route exact path=\"/cart\" component={Cart} />\r\n        <Route exact path=\"/user\" component={User} />\r\n      </BrowserRouter>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_START,\r\n  LOGOUT,\r\n} from \"../actions/actionTypes\";\r\n\r\n// let user = JSON.parse(localStorage.getItem(\"user\"));\r\n// const initialState = user ? { loggedIn: true, user } : {};\r\nconst initialState = { loggedIn: false };\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        loggedIn: true,\r\n        user: action.user,\r\n      };\r\n    case AUTH_FAIL:\r\n      return {\r\n        loggedIn: false,\r\n        error: action.error,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        loggedIn: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { ADD_PRODUCT_TO_CART } from \"../actions/actionTypes\";\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT_TO_CART:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;","import {\r\n  GET_USER_DATA_SUCCESS,\r\n  GET_USER_DATA_FAIL,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  customerId: \"\",\r\n  customerName: \"\",\r\n  customerLastname: \"\",\r\n  customerAddress: \"\",\r\n  login: \"\",\r\n  password: \"\",\r\n};\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_DATA_SUCCESS:\r\n      return action.userData;\r\n    case GET_USER_DATA_FAIL:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport authReducer from \"./auth.reducer\";\r\nimport cartReducer from \"./cart.reducer\";\r\nimport userReducer from \"./user.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authReducer,\r\n  cartReducer,\r\n  userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport \"./styles/font-awesome/css/font-awesome.min.css\";\r\n// import 'bootstrap';\r\n\r\n// REDUX START:\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { Provider } from \"react-redux\";\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n// REDUX END\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}